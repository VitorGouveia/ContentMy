var W=Object.create;var L=Object.defineProperty;var X=Object.getOwnPropertyDescriptor;var Y=Object.getOwnPropertyNames;var Z=Object.getPrototypeOf,rr=Object.prototype.hasOwnProperty;var er=(s,r,e,t)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of Y(r))!rr.call(s,o)&&o!==e&&L(s,o,{get:()=>r[o],enumerable:!(t=X(r,o))||t.enumerable});return s};var i=(s,r,e)=>(e=s!=null?W(Z(s)):{},er(r||!s||!s.__esModule?L(e,"default",{value:s,enumerable:!0}):e,s));var Gr=require("dotenv/config");var Hr=require("reflect-metadata"),k=i(require("express")),G=i(require("helmet")),Q=i(require("hpp")),P=i(require("express-rate-limit"));var z=i(require("express"));var $=i(require("express"));var p=class{constructor({title:r,code:e,description:t}){this.title=r,this.code=e,this.description=t}setDescription(r){return this.description=r,this}};var x=class{constructor(r){this.result=r}isFailure(){return!0}isSuccess(){return!1}},w=class{constructor(r){this.result=r}isFailure(){return!1}isSuccess(){return!0}},u=class{constructor({success:r,error:e,value:t}){if(r&&e)throw new p({title:"InvalidOperation",code:"0001",description:"A result cannot be successful and contain an error."});if(!r&&!e)throw new p({title:"InvalidOperation",code:"0002",description:"A failing result needs to contain an error message."});this.isSuccess=r,this.error=e,this._value=t}get value(){return this._value}static ok(r){return new u({success:!0,error:null,value:r})}static fail(r){return new u({success:!1,error:r,value:null})}},T=s=>new x(s),E=s=>new w(s);var S=new p({title:"UserNotFound",code:"0006",description:"Could not find a user."}),I=new p({title:"InvalidPassword",code:"0007",description:"The entered password is not valid."});var q=i(require("crypto")),m=class{constructor(r){this.id=r??q.default.randomUUID()}};var c=class extends m{constructor(e){super();Object.assign(this,e)}static create(e){return new c({...e,createdAt:new Date,updatedAt:new Date})}};var d=class{constructor(r,e,t,o,n){this.usersRepository=r;this.refreshTokenRepository=e;this.hashProvider=t;this.tokenProvider=o;this.dateProvider=n}async run({login:r,password:e}){let t=await this.usersRepository.findByEmail(r);if(!t)return T(S);if(!await this.hashProvider.compare(e,t.password))return T(I);let n=await this.tokenProvider.create({id:t.id},{secret:process.env.ACCESS_TOKEN_SECRET,options:{expiresIn:"5m"}}),l=await this.dateProvider.addDays(3),b=c.create({userId:t.id,expiresIn:l});await this.refreshTokenRepository.store(b);let V=await this.tokenProvider.create({...b},{secret:process.env.ACCESS_TOKEN_SECRET,options:{expiresIn:"3d"}});return E(u.ok({accessToken:n,refreshToken:V,user:t}))}};var f=class{constructor(r){this.loginUserAccount=r}async handle(r,e){let{login:t,password:o}=r.body;try{let n=await this.loginUserAccount.run({login:t,password:o});return n.isFailure()?e.status(400).json({error:n.result}):e.status(200).json(n.result.value)}catch(n){throw n}}};var h=class{constructor(){this.users=[];this.reset=()=>(this.users=[],!0)}async findByEmail(r){let e=this.users.find(t=>t.email===r);return e||null}async findByCPF(r){let e=this.users.find(t=>t.cpf===r);return e||null}async findByPhoneNumber(r){let e=this.users.find(t=>t.phoneNumber===r);return e||null}async store(r){return this.users.push(r),null}};var y=class{constructor(){this.refreshTokens=[]}async store(r){return this.refreshTokens.push(r),null}};var C=i(require("bcrypt")),g=class{constructor(){this.crypt=C.default;this.defaultSalt=this.crypt.genSaltSync()}async compare(r,e){return await this.crypt.compare(r,e)}async hash(r){return await this.crypt.hash(r,this.defaultSalt)}};var j=i(require("jsonwebtoken")),R=class{constructor(){this.token=j.default}async create(r,e){return this.token.sign(r,e.secret,{expiresIn:e.options.expiresIn})}async verify(r,e){return this.token.verify(r,e)}};var D=i(require("dayjs")),v=class{constructor(){this.day=(0,D.default)()}async addDays(r){return this.day.add(r,"day").unix()}};var N=new h,F=new y,O=new g,M=new R,B=new v;var sr=new d(N,F,O,M,B),H=new f(sr);function _(s){return async(r,e,t)=>{let o=Object.keys(r.body);return JSON.stringify(o)===JSON.stringify(s)?(o.forEach(l=>{if(!s.includes(l))return e.status(400).json({error:{title:"InvalidProps",message:`The prop: '${l}' is invalid.`}})}),t()):e.status(400).json({error:{title:"MissingProps",message:`The required props for request are: ${s.join(", ")}`}})}}var J=$.default.Router();J.post("/login",_(["login","password"]),async(s,r)=>{await H.handle(s,r)});var K=J;var U=z.default.Router();U.use("/users",K);var a=(0,k.default)();a.use(k.default.json());a.use((0,G.default)());a.use((0,Q.default)());a.use((0,P.default)({windowMs:1e3*60,max:20,standardHeaders:!1,legacyHeaders:!1,handler:(s,r)=>r.status(429).json({error:{title:"TooManyRequests",description:"Too many requests from this IP, please try again after an hour.",code:"1000"}}),store:new P.MemoryStore}));a.use(U);a.disable("x-powered-by");var A=Number(process.env.PORT)||3333;a.listen(A,()=>console.log(`[App]: listening on ${A}`));
